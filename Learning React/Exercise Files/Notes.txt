Solving that missing key issue: Ch04 - 4

These are the items we have:

      const dishes = [
        "Black Bean Soup",
        "Macaroni and Cheese",
        "Salmon and Potatoes",
        "Pizza"
      ];

create an object wrapper (assigns keys):
      const dishObjects = dishes.map(
        (dish, i) => ({
          id: i,
          title: dish
        })
      );

Return list
      function Main(props) {
        return (
          <section>
            <ul>
              {props.dishes.map((dish) => (
                <li key={dish.id}>
                  {dish.title}
                </li>
              ))}
            </ul>
          </section>
        );
      }


React Fragement can replace the us of div wrapping if you need it

Usual stuff I have learned
npm start
npm install
npx create-react-app name


ch04 - 02
destructuring can be used instead of using the props as we only need to grab one items

ch04 - 03 - USing Hooks

  const [emotion, setEmotion] = useState()
the first is are variable, second is our setter function to update



ch04 - useEffect

does happen right away, but on some condition.
leaving a blank return means it will only run with 
  that item once and not multiple, which explains 
  why when we did the project, it kept refreshing 
  infinitely.